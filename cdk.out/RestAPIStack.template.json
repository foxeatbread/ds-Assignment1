{
 "Resources": {
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AliasAttributes": [
     "email"
    ],
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/UserPool/Resource"
   }
  },
  "UserPoolAppClientDD0407EC": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/UserPool/AppClient/Resource"
   }
  },
  "AuthServiceApi6F145F59": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "Authentication Service RestApi",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "AuthServiceApi"
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Resource"
   }
  },
  "AuthServiceApiDeploymentE6C7B14Bc744378c62f289f56a622839675fe936": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Authentication Service RestApi",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "DependsOn": [
    "AuthServiceApiauthconfirmsignupOPTIONSF4E3A721",
    "AuthServiceApiauthconfirmsignupPOSTBF26C81A",
    "AuthServiceApiauthconfirmsignup53051378",
    "AuthServiceApiauthOPTIONSB7D5DB23",
    "AuthServiceApiauth4F918273",
    "AuthServiceApiauthsigninOPTIONS4CCAC799",
    "AuthServiceApiauthsigninPOSTC78F9AEC",
    "AuthServiceApiauthsigninAC698811",
    "AuthServiceApiauthsignoutGETC75DA49A",
    "AuthServiceApiauthsignoutOPTIONSCB5E990F",
    "AuthServiceApiauthsignout9DEA4640",
    "AuthServiceApiauthsignupOPTIONSB3E2B959",
    "AuthServiceApiauthsignupPOST07EFAAC5",
    "AuthServiceApiauthsignup2FA1E77F",
    "AuthServiceApiOPTIONSF87E2E8C"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Deployment/Resource"
   }
  },
  "AuthServiceApiDeploymentStageprodEA127565": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AuthServiceApiDeploymentE6C7B14Bc744378c62f289f56a622839675fe936"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/DeploymentStage.prod/Resource"
   }
  },
  "AuthServiceApiOPTIONSF87E2E8C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AuthServiceApi6F145F59",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauth4F918273": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AuthServiceApi6F145F59",
      "RootResourceId"
     ]
    },
    "PathPart": "auth",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/Resource"
   }
  },
  "AuthServiceApiauthOPTIONSB7D5DB23": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauth4F918273"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignup2FA1E77F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauth4F918273"
    },
    "PathPart": "signup",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/Resource"
   }
  },
  "AuthServiceApiauthsignupOPTIONSB3E2B959": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignup2FA1E77F"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignupPOSTApiPermissionRestAPIStackAuthServiceApi0F27BA19POSTauthsignupBDE8AC82": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiSignupFn42E54DA2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodEA127565"
       },
       "/POST/auth/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/POST/ApiPermission.RestAPIStackAuthServiceApi0F27BA19.POST..auth.signup"
   }
  },
  "AuthServiceApiauthsignupPOSTApiPermissionTestRestAPIStackAuthServiceApi0F27BA19POSTauthsignup505B8A14": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiSignupFn42E54DA2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/test-invoke-stage/POST/auth/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/POST/ApiPermission.Test.RestAPIStackAuthServiceApi0F27BA19.POST..auth.signup"
   }
  },
  "AuthServiceApiauthsignupPOST07EFAAC5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AuthServiceApiSignupFn42E54DA2",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignup2FA1E77F"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/POST/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignup53051378": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauth4F918273"
    },
    "PathPart": "confirm_signup",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignupOPTIONSF4E3A721": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthconfirmsignup53051378"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTApiPermissionRestAPIStackAuthServiceApi0F27BA19POSTauthconfirmsignupE180C3DD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiConfirmFn0A585E3D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodEA127565"
       },
       "/POST/auth/confirm_signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/POST/ApiPermission.RestAPIStackAuthServiceApi0F27BA19.POST..auth.confirm_signup"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTApiPermissionTestRestAPIStackAuthServiceApi0F27BA19POSTauthconfirmsignup0A2B0B8D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiConfirmFn0A585E3D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/test-invoke-stage/POST/auth/confirm_signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/POST/ApiPermission.Test.RestAPIStackAuthServiceApi0F27BA19.POST..auth.confirm_signup"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTBF26C81A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AuthServiceApiConfirmFn0A585E3D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthconfirmsignup53051378"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/POST/Resource"
   }
  },
  "AuthServiceApiauthsignout9DEA4640": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauth4F918273"
    },
    "PathPart": "signout",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signout/Resource"
   }
  },
  "AuthServiceApiauthsignoutOPTIONSCB5E990F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignout9DEA4640"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signout/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignoutGETApiPermissionRestAPIStackAuthServiceApi0F27BA19GETauthsignout396009BE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiSignoutFn0B9011EB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodEA127565"
       },
       "/GET/auth/signout"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signout/GET/ApiPermission.RestAPIStackAuthServiceApi0F27BA19.GET..auth.signout"
   }
  },
  "AuthServiceApiauthsignoutGETApiPermissionTestRestAPIStackAuthServiceApi0F27BA19GETauthsignout089FEE87": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiSignoutFn0B9011EB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/test-invoke-stage/GET/auth/signout"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signout/GET/ApiPermission.Test.RestAPIStackAuthServiceApi0F27BA19.GET..auth.signout"
   }
  },
  "AuthServiceApiauthsignoutGETC75DA49A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AuthServiceApiSignoutFn0B9011EB",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignout9DEA4640"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signout/GET/Resource"
   }
  },
  "AuthServiceApiauthsigninAC698811": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauth4F918273"
    },
    "PathPart": "signin",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signin/Resource"
   }
  },
  "AuthServiceApiauthsigninOPTIONS4CCAC799": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsigninAC698811"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signin/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsigninPOSTApiPermissionRestAPIStackAuthServiceApi0F27BA19POSTauthsignin413C1017": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiSigninFnD683380D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodEA127565"
       },
       "/POST/auth/signin"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signin/POST/ApiPermission.RestAPIStackAuthServiceApi0F27BA19.POST..auth.signin"
   }
  },
  "AuthServiceApiauthsigninPOSTApiPermissionTestRestAPIStackAuthServiceApi0F27BA19POSTauthsigninE30A154A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiSigninFnD683380D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/test-invoke-stage/POST/auth/signin"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signin/POST/ApiPermission.Test.RestAPIStackAuthServiceApi0F27BA19.POST..auth.signin"
   }
  },
  "AuthServiceApiauthsigninPOSTC78F9AEC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AuthServiceApiSigninFnD683380D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsigninAC698811"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signin/POST/Resource"
   }
  },
  "AuthServiceApiSignupFnServiceRole449F516A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/SignupFn/ServiceRole/Resource"
   }
  },
  "AuthServiceApiSignupFn42E54DA2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a9a94fd7041a07e611e4f1bcf5ce535ed14f2587ca822c7742be1d21de47f4f8.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AuthServiceApiSignupFnServiceRole449F516A",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AuthServiceApiSignupFnServiceRole449F516A"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/SignupFn/Resource",
    "aws:asset:path": "asset.a9a94fd7041a07e611e4f1bcf5ce535ed14f2587ca822c7742be1d21de47f4f8",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AuthServiceApiConfirmFnServiceRole2967189E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/ConfirmFn/ServiceRole/Resource"
   }
  },
  "AuthServiceApiConfirmFn0A585E3D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "63c87acabbd81a0f6bb93a1d93dfd85b779581f729eb933c138b3b6dc712c24d.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AuthServiceApiConfirmFnServiceRole2967189E",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AuthServiceApiConfirmFnServiceRole2967189E"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/ConfirmFn/Resource",
    "aws:asset:path": "asset.63c87acabbd81a0f6bb93a1d93dfd85b779581f729eb933c138b3b6dc712c24d",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AuthServiceApiSignoutFnServiceRole47081A24": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/SignoutFn/ServiceRole/Resource"
   }
  },
  "AuthServiceApiSignoutFn0B9011EB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7564b3916c1f0810e96c6dcdf0764b5b899420a8a6ce0015f43bf66eb5116441.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AuthServiceApiSignoutFnServiceRole47081A24",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AuthServiceApiSignoutFnServiceRole47081A24"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/SignoutFn/Resource",
    "aws:asset:path": "asset.7564b3916c1f0810e96c6dcdf0764b5b899420a8a6ce0015f43bf66eb5116441",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AuthServiceApiSigninFnServiceRole63D70D3D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/SigninFn/ServiceRole/Resource"
   }
  },
  "AuthServiceApiSigninFnD683380D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "814b05a6edc4cf3454bb8039277fe5186f639a7d767415a6f70108d4a6bf5fd2.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AuthServiceApiSigninFnServiceRole63D70D3D",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AuthServiceApiSigninFnServiceRole63D70D3D"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/SigninFn/Resource",
    "aws:asset:path": "asset.814b05a6edc4cf3454bb8039277fe5186f639a7d767415a6f70108d4a6bf5fd2",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "MoviesTable0F76A3E4": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "TableName": "Movies"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/MoviesTable/Resource"
   }
  },
  "MovieCastTableE4F7E4C8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "movieId",
      "AttributeType": "N"
     },
     {
      "AttributeName": "actorName",
      "AttributeType": "S"
     },
     {
      "AttributeName": "roleName",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "movieId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "actorName",
      "KeyType": "RANGE"
     }
    ],
    "LocalSecondaryIndexes": [
     {
      "IndexName": "roleIx",
      "KeySchema": [
       {
        "AttributeName": "movieId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "roleName",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "TableName": "MovieCast"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/MovieCastTable/Resource"
   }
  },
  "MovieReviewTable19486002": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "movieId",
      "AttributeType": "N"
     },
     {
      "AttributeName": "reviewDate",
      "AttributeType": "S"
     },
     {
      "AttributeName": "reviewerName",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "movieId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "reviewDate",
      "KeyType": "RANGE"
     }
    ],
    "LocalSecondaryIndexes": [
     {
      "IndexName": "roleIx",
      "KeySchema": [
       {
        "AttributeName": "movieId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "reviewerName",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "TableName": "MovieReview"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/MovieReviewTable/Resource"
   }
  },
  "GetMovieByIdFnServiceRole129ED770": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetMovieByIdFn/ServiceRole/Resource"
   }
  },
  "GetMovieByIdFnServiceRoleDefaultPolicy0B2C84C0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieCastTableE4F7E4C8",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MovieCastTableE4F7E4C8",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetMovieByIdFnServiceRoleDefaultPolicy0B2C84C0",
    "Roles": [
     {
      "Ref": "GetMovieByIdFnServiceRole129ED770"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetMovieByIdFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetMovieByIdFn429FC61F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d130a3875c6c9592f382f73165d079594d31f6f8288dfb46273ee9fd4e3a3973.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME_MOVIES": {
       "Ref": "MoviesTable0F76A3E4"
      },
      "TABLE_NAME_MOVIE_CASTS": {
       "Ref": "MovieCastTableE4F7E4C8"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetMovieByIdFnServiceRole129ED770",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetMovieByIdFnServiceRoleDefaultPolicy0B2C84C0",
    "GetMovieByIdFnServiceRole129ED770"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetMovieByIdFn/Resource",
    "aws:asset:path": "asset.d130a3875c6c9592f382f73165d079594d31f6f8288dfb46273ee9fd4e3a3973",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetAllMoviesFnServiceRole0FF7E3CB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllMoviesFn/ServiceRole/Resource"
   }
  },
  "GetAllMoviesFnServiceRoleDefaultPolicy2E8AB9F7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetAllMoviesFnServiceRoleDefaultPolicy2E8AB9F7",
    "Roles": [
     {
      "Ref": "GetAllMoviesFnServiceRole0FF7E3CB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllMoviesFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetAllMoviesFnD14CC45A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "96a1201b656d3c20fbb68a11822ce221d2130e474152512a3d5d8f21f9b187b0.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MoviesTable0F76A3E4"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetAllMoviesFnServiceRole0FF7E3CB",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetAllMoviesFnServiceRoleDefaultPolicy2E8AB9F7",
    "GetAllMoviesFnServiceRole0FF7E3CB"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllMoviesFn/Resource",
    "aws:asset:path": "asset.96a1201b656d3c20fbb68a11822ce221d2130e474152512a3d5d8f21f9b187b0",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddMovieFnServiceRoleB1F9B436": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddMovieFn/ServiceRole/Resource"
   }
  },
  "AddMovieFnServiceRoleDefaultPolicy28168983": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddMovieFnServiceRoleDefaultPolicy28168983",
    "Roles": [
     {
      "Ref": "AddMovieFnServiceRoleB1F9B436"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddMovieFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddMovieFnA0261A58": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ce73270d47dfed12aa44aafb9356ebc2d9e982c079ee6bec5db34f36db1659ce.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MoviesTable0F76A3E4"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AddMovieFnServiceRoleB1F9B436",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AddMovieFnServiceRoleDefaultPolicy28168983",
    "AddMovieFnServiceRoleB1F9B436"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddMovieFn/Resource",
    "aws:asset:path": "asset.ce73270d47dfed12aa44aafb9356ebc2d9e982c079ee6bec5db34f36db1659ce",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeleteMovieFnServiceRole38DEA1BA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/DeleteMovieFn/ServiceRole/Resource"
   }
  },
  "DeleteMovieFnServiceRoleDefaultPolicy387CD24D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteMovieFnServiceRoleDefaultPolicy387CD24D",
    "Roles": [
     {
      "Ref": "DeleteMovieFnServiceRole38DEA1BA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/DeleteMovieFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteMovieFnCF59BB54": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b44882222b5a0d5ccfd6ec6e6ece890e7156c3aa69b49bf1e7531cf186f187df.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MoviesTable0F76A3E4"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "DeleteMovieFnServiceRole38DEA1BA",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "DeleteMovieFnServiceRoleDefaultPolicy387CD24D",
    "DeleteMovieFnServiceRole38DEA1BA"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/DeleteMovieFn/Resource",
    "aws:asset:path": "asset.b44882222b5a0d5ccfd6ec6e6ece890e7156c3aa69b49bf1e7531cf186f187df",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetCastMemberFnServiceRoleE3D31A5A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetCastMemberFn/ServiceRole/Resource"
   }
  },
  "GetCastMemberFnServiceRoleDefaultPolicyE149AAD0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieCastTableE4F7E4C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MovieCastTableE4F7E4C8",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetCastMemberFnServiceRoleDefaultPolicyE149AAD0",
    "Roles": [
     {
      "Ref": "GetCastMemberFnServiceRoleE3D31A5A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetCastMemberFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetCastMemberFn1BEFFC9C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fc7999b4f38f608db6b5b02bd2ea849700a9f6678ae96b102ec4a7d0849265a9.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieCastTableE4F7E4C8"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetCastMemberFnServiceRoleE3D31A5A",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetCastMemberFnServiceRoleDefaultPolicyE149AAD0",
    "GetCastMemberFnServiceRoleE3D31A5A"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetCastMemberFn/Resource",
    "aws:asset:path": "asset.fc7999b4f38f608db6b5b02bd2ea849700a9f6678ae96b102ec4a7d0849265a9",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddReviewFnServiceRole87863C7A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddReviewFn/ServiceRole/Resource"
   }
  },
  "AddReviewFnServiceRoleDefaultPolicyC10A9151": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieReviewTable19486002",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MovieReviewTable19486002",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddReviewFnServiceRoleDefaultPolicyC10A9151",
    "Roles": [
     {
      "Ref": "AddReviewFnServiceRole87863C7A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddReviewFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddReviewFnE8F4E4BE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c0977ec8a147cda790d4633c0891f209e854063d7cbdcc6ce9dcb7310c95fc0e.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieReviewTable19486002"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AddReviewFnServiceRole87863C7A",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AddReviewFnServiceRoleDefaultPolicyC10A9151",
    "AddReviewFnServiceRole87863C7A"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddReviewFn/Resource",
    "aws:asset:path": "asset.c0977ec8a147cda790d4633c0891f209e854063d7cbdcc6ce9dcb7310c95fc0e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetReviewByIdFnServiceRoleCD0FD4EE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetReviewByIdFn/ServiceRole/Resource"
   }
  },
  "GetReviewByIdFnServiceRoleDefaultPolicy3EFBFF5C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieReviewTable19486002",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MovieReviewTable19486002",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetReviewByIdFnServiceRoleDefaultPolicy3EFBFF5C",
    "Roles": [
     {
      "Ref": "GetReviewByIdFnServiceRoleCD0FD4EE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetReviewByIdFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetReviewByIdFn1432CD24": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1edf1f6e56406e0844709e59d50c51ae467e7b8d7e389d2228cc4061abdefb34.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieReviewTable19486002"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetReviewByIdFnServiceRoleCD0FD4EE",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetReviewByIdFnServiceRoleDefaultPolicy3EFBFF5C",
    "GetReviewByIdFnServiceRoleCD0FD4EE"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetReviewByIdFn/Resource",
    "aws:asset:path": "asset.1edf1f6e56406e0844709e59d50c51ae467e7b8d7e389d2228cc4061abdefb34",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetReviewByReviewerNameOrYearFnServiceRoleF4EA1C63": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetReviewByReviewerNameOrYearFn/ServiceRole/Resource"
   }
  },
  "GetReviewByReviewerNameOrYearFnServiceRoleDefaultPolicyD2212DD6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieReviewTable19486002",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MovieReviewTable19486002",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetReviewByReviewerNameOrYearFnServiceRoleDefaultPolicyD2212DD6",
    "Roles": [
     {
      "Ref": "GetReviewByReviewerNameOrYearFnServiceRoleF4EA1C63"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetReviewByReviewerNameOrYearFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetReviewByReviewerNameOrYearFnF94A1CED": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ba33562dc5efff417cdbc9639222e1d4bf40da76d9fbb00c34a4fba93a7ff5a8.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieReviewTable19486002"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetReviewByReviewerNameOrYearFnServiceRoleF4EA1C63",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetReviewByReviewerNameOrYearFnServiceRoleDefaultPolicyD2212DD6",
    "GetReviewByReviewerNameOrYearFnServiceRoleF4EA1C63"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetReviewByReviewerNameOrYearFn/Resource",
    "aws:asset:path": "asset.ba33562dc5efff417cdbc9639222e1d4bf40da76d9fbb00c34a4fba93a7ff5a8",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetAllReviewsByReviewerNameFnServiceRole655D093E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllReviewsByReviewerNameFn/ServiceRole/Resource"
   }
  },
  "GetAllReviewsByReviewerNameFnServiceRoleDefaultPolicyCB6447B9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieReviewTable19486002",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MovieReviewTable19486002",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetAllReviewsByReviewerNameFnServiceRoleDefaultPolicyCB6447B9",
    "Roles": [
     {
      "Ref": "GetAllReviewsByReviewerNameFnServiceRole655D093E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllReviewsByReviewerNameFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetAllReviewsByReviewerNameFn86115EA0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "377fc7c0d13a99362f7bac7023150945ce9ff66badc2135e1847de5a6599bd54.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieReviewTable19486002"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetAllReviewsByReviewerNameFnServiceRole655D093E",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetAllReviewsByReviewerNameFnServiceRoleDefaultPolicyCB6447B9",
    "GetAllReviewsByReviewerNameFnServiceRole655D093E"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllReviewsByReviewerNameFn/Resource",
    "aws:asset:path": "asset.377fc7c0d13a99362f7bac7023150945ce9ff66badc2135e1847de5a6599bd54",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ModifyReviewByReviewerNameFnServiceRoleC8D3105E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/ModifyReviewByReviewerNameFn/ServiceRole/Resource"
   }
  },
  "ModifyReviewByReviewerNameFnServiceRoleDefaultPolicy9EF40B79": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieReviewTable19486002",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MovieReviewTable19486002",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ModifyReviewByReviewerNameFnServiceRoleDefaultPolicy9EF40B79",
    "Roles": [
     {
      "Ref": "ModifyReviewByReviewerNameFnServiceRoleC8D3105E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/ModifyReviewByReviewerNameFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ModifyReviewByReviewerNameFn98576E52": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fda1343c0344208ed38b30e5e520751b611f494a1ede0571cd0100fa08613266.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieReviewTable19486002"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "ModifyReviewByReviewerNameFnServiceRoleC8D3105E",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "ModifyReviewByReviewerNameFnServiceRoleDefaultPolicy9EF40B79",
    "ModifyReviewByReviewerNameFnServiceRoleC8D3105E"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/ModifyReviewByReviewerNameFn/Resource",
    "aws:asset:path": "asset.fda1343c0344208ed38b30e5e520751b611f494a1ede0571cd0100fa08613266",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AuthorizerFnServiceRole91AE9242": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthorizerFn/ServiceRole/Resource"
   }
  },
  "AuthorizerFn97B9AA7C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2e6dede3f5d0e085da8e9eb7e15e4d2f1eaaba26e6e54ecc95ff4da1620e71d1.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AuthorizerFnServiceRole91AE9242",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "AuthorizerFnServiceRole91AE9242"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthorizerFn/Resource",
    "aws:asset:path": "asset.2e6dede3f5d0e085da8e9eb7e15e4d2f1eaaba26e6e54ecc95ff4da1620e71d1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AuthorizerFnRestAPIStackRequestAuthorizer12A96582Permissions1F72ACCC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthorizerFn97B9AA7C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/authorizers/",
       {
        "Ref": "RequestAuthorizer7473A0B3"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthorizerFn/RestAPIStackRequestAuthorizer12A96582:Permissions"
   }
  },
  "RequestAuthorizer7473A0B3": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "AuthorizerResultTtlInSeconds": 0,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "AuthorizerFn97B9AA7C",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "AuthorizerFn97B9AA7C",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "AuthorizerFn97B9AA7C",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "method.request.header.cookie",
    "Name": "RestAPIStackRequestAuthorizer12A96582",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    },
    "Type": "REQUEST"
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RequestAuthorizer/Resource"
   }
  },
  "moviesddbInitDataA13BB07E": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"DynamoDB\",\"action\":\"batchWriteItem\",\"parameters\":{\"RequestItems\":{\"",
       {
        "Ref": "MoviesTable0F76A3E4"
       },
       "\":[{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/sRLC052ieEzkQs9dEtPMfFxYkej.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"878\"}]},\"id\":{\"N\":\"1234\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"Rebel Moon - Part One: A Child of Fire\"},\"overview\":{\"S\":\"When a peaceful colony on the edge of the galaxy finds itself threatened by the armies of the tyrannical Regent Balisarius, they dispatch Kora, a young woman with a mysterious past, to seek out warriors from neighboring planets to help them take a stand.\"},\"popularity\":{\"N\":\"2136.3\"},\"poster_path\":{\"S\":\"/6epeijccmJlnfvFitfGyfT7njav.jpg\"},\"release_date\":{\"S\":\"2023-12-15\"},\"title\":{\"S\":\"Rebel Moon - Part One: A Child of Fire\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"6.4\"},\"vote_count\":{\"N\":\"750\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/jXJxMcVoEuXzym3vFnjqDW4ifo6.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"28\"},{\"N\":\"12\"},{\"N\":\"14\"}]},\"id\":{\"N\":\"2345\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"Aquaman and the Lost Kingdom\"},\"overview\":{\"S\":\"Black Manta, still driven by the need to avenge his father's death and wielding the power of the mythic Black Trident, will stop at nothing to take Aquaman down once and for all. To defeat him, Aquaman must turn to his imprisoned brother Orm, the former King of Atlantis, to forge an unlikely alliance in order to save the world from irreversible destruction.\"},\"popularity\":{\"N\":\"1605.303\"},\"poster_path\":{\"S\":\"/8xV47NDrjdZDpkVcCFqkdHa3T0C.jpg\"},\"release_date\":{\"S\":\"2023-12-20\"},\"title\":{\"S\":\"Aquaman and the Lost Kingdom\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"6.5\"},\"vote_count\":{\"N\":\"299\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/5a4JdoFwll5DRtKMe7JLuGQ9yJm.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"18\"},{\"N\":\"878\"},{\"N\":\"28\"}]},\"id\":{\"N\":\"695721\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"The Hunger Games: The Ballad of Songbirds & Snakes\"},\"overview\":{\"S\":\"64 years before he becomes the tyrannical president of Panem, Coriolanus Snow sees a chance for a change in fortunes when he mentors Lucy Gray Baird, the female tribute from District 12.\"},\"popularity\":{\"N\":\"1509.974\"},\"poster_path\":{\"S\":\"/mBaXZ95R2OxueZhvQbcEWy2DqyO.jpg\"},\"release_date\":{\"S\":\"2023-11-15\"},\"title\":{\"S\":\"The Hunger Games: The Ballad of Songbirds & Snakes\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"7.2\"},\"vote_count\":{\"N\":\"1181\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/15Fe18IglCCP1jJoj5F529on0IA.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"28\"},{\"N\":\"35\"}]},\"id\":{\"N\":\"1029575\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"The Family Plan\"},\"overview\":{\"S\":\"Dan Morgan is many things: a devoted husband, a loving father, a celebrated car salesman. He's also a former assassin. And when his past catches up to his present, he's forced to take his unsuspecting family on a road trip unlike any other.\"},\"popularity\":{\"N\":\"954.371\"},\"poster_path\":{\"S\":\"/jLLtx3nTRSLGPAKl4RoIv1FbEBr.jpg\"},\"release_date\":{\"S\":\"2023-12-14\"},\"title\":{\"S\":\"The Family Plan\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"7.3\"},\"vote_count\":{\"N\":\"457\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/bmlkLCjrIWnnZzdAQ4uNPG9JFdj.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"35\"},{\"N\":\"10751\"},{\"N\":\"14\"}]},\"id\":{\"N\":\"787699\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"Wonka\"},\"overview\":{\"S\":\"Willy Wonka – chock-full of ideas and determined to change the world one delectable bite at a time – is proof that the best things in life begin with a dream, and if you’re lucky enough to meet Willy Wonka, anything is possible.\"},\"popularity\":{\"N\":\"949.214\"},\"poster_path\":{\"S\":\"/qhb1qOilapbapxWQn9jtRCMwXJF.jpg\"},\"release_date\":{\"S\":\"2023-12-06\"},\"title\":{\"S\":\"Wonka\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"7.2\"},\"vote_count\":{\"N\":\"703\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/gg4zZoTggZmpAQ32qIrP5dtnkEZ.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"28\"},{\"N\":\"80\"}]},\"id\":{\"N\":\"891699\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"Silent Night\"},\"overview\":{\"S\":\"A tormented father witnesses his young son die when caught in a gang's crossfire on Christmas Eve. While recovering from a wound that costs him his voice, he makes vengeance his life's mission and embarks on a punishing training regimen in order to avenge his son's death.\"},\"popularity\":{\"N\":\"945.22\"},\"poster_path\":{\"S\":\"/tlcuhdNMKNGEVpGqBZrAaOOf1A6.jpg\"},\"release_date\":{\"S\":\"2023-11-30\"},\"title\":{\"S\":\"Silent Night\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"5.8\"},\"vote_count\":{\"N\":\"181\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/1pFSJ9lxMYLkgLS5gmnwm1AEiqx.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"878\"}]},\"id\":{\"N\":\"798141\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"Doors\"},\"overview\":{\"S\":\"Without warning, millions of mysterious alien “doors” suddenly appear around the globe. In a rush to determine the reason for their arrival, mankind must work together to understand the purpose of these cosmic anomalies.\"},\"popularity\":{\"N\":\"752.379\"},\"poster_path\":{\"S\":\"/pGPUXyhQTOqskKdDOD3Fmicqfc0.jpg\"},\"release_date\":{\"S\":\"2021-03-23\"},\"title\":{\"S\":\"Doors\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"5\"},\"vote_count\":{\"N\":\"119\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/fm6KqXpk3M2HVveHwCrBSSBaO0V.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"18\"},{\"N\":\"36\"}]},\"id\":{\"N\":\"872585\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"Oppenheimer\"},\"overview\":{\"S\":\"The story of J. Robert Oppenheimer's role in the development of the atomic bomb during World War II.\"},\"popularity\":{\"N\":\"746.349\"},\"poster_path\":{\"S\":\"/8Gxv8gSFCU0XGDykEGv7zR1n2ua.jpg\"},\"release_date\":{\"S\":\"2023-07-19\"},\"title\":{\"S\":\"Oppenheimer\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"8.1\"},\"vote_count\":{\"N\":\"5713\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/1jITxVJhkiFJuQuj8NcPLmDNtJg.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"18\"},{\"N\":\"35\"},{\"N\":\"53\"}]},\"id\":{\"N\":\"930564\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"Saltburn\"},\"overview\":{\"S\":\"Struggling to find his place at Oxford University, student Oliver Quick finds himself drawn into the world of the charming and aristocratic Felix Catton, who invites him to Saltburn, his eccentric family's sprawling estate, for a summer never to be forgotten.\"},\"popularity\":{\"N\":\"658.86\"},\"poster_path\":{\"S\":\"/qjhahNLSZ705B5JP92YMEYPocPz.jpg\"},\"release_date\":{\"S\":\"2023-11-16\"},\"title\":{\"S\":\"Saltburn\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"7.1\"},\"vote_count\":{\"N\":\"473\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/1X7vow16X7CnCoexXh4H4F2yDJv.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"80\"},{\"N\":\"18\"},{\"N\":\"36\"}]},\"id\":{\"N\":\"466420\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"Killers of the Flower Moon\"},\"overview\":{\"S\":\"When oil is discovered in 1920s Oklahoma under Osage Nation land, the Osage people are murdered one by one—until the FBI steps in to unravel the mystery.\"},\"popularity\":{\"N\":\"612.671\"},\"poster_path\":{\"S\":\"/dB6Krk806zeqd0YNp2ngQ9zXteH.jpg\"},\"release_date\":{\"S\":\"2023-10-18\"},\"title\":{\"S\":\"Killers of the Flower Moon\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"7.5\"},\"vote_count\":{\"N\":\"1647\"}}}},{\"PutRequest\":{\"Item\":{\"adult\":{\"BOOL\":false},\"backdrop_path\":{\"S\":\"/ktHEdqmMWC1wdfPRMRCTZe2OISL.jpg\"},\"genre_ids\":{\"L\":[{\"N\":\"27\"},{\"N\":\"9648\"},{\"N\":\"53\"}]},\"id\":{\"N\":\"1071215\"},\"original_language\":{\"S\":\"en\"},\"original_title\":{\"S\":\"Thanksgiving\"},\"overview\":{\"S\":\"After a Black Friday riot ends in tragedy, a mysterious Thanksgiving-inspired killer terrorizes Plymouth, Massachusetts - the birthplace of the holiday. Picking off residents one by one, what begins as random revenge killings are soon revealed to be part of a larger, sinister holiday plan.\"},\"popularity\":{\"N\":\"606.566\"},\"poster_path\":{\"S\":\"/f5f3TEVst1nHHyqgn7Z3tlwnBIH.jpg\"},\"release_date\":{\"S\":\"2023-11-16\"},\"title\":{\"S\":\"Thanksgiving\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"6.7\"},\"vote_count\":{\"N\":\"347\"}}}}],\"",
       {
        "Ref": "MovieCastTableE4F7E4C8"
       },
       "\":[{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"1234\"},\"actorName\":{\"S\":\"Joe Bloggs\"},\"roleName\":{\"S\":\"Male Character 1\"},\"roleDescription\":{\"S\":\"description of character 1\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"1234\"},\"actorName\":{\"S\":\"Alice Broggs\"},\"roleName\":{\"S\":\"Female Character 1\"},\"roleDescription\":{\"S\":\"description of character 2\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"1234\"},\"actorName\":{\"S\":\"Joe Cloggs\"},\"roleName\":{\"S\":\"Male Character 2\"},\"roleDescription\":{\"S\":\"description of character 3\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"2345\"},\"actorName\":{\"S\":\"Joe Bloggs\"},\"roleName\":{\"S\":\"Male Character 1\"},\"roleDescription\":{\"S\":\"description of character 3\"}}}}],\"",
       {
        "Ref": "MovieReviewTable19486002"
       },
       "\":[{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"1234\"},\"reviewerName\":{\"S\":\"HaoxuanGu\"},\"content\":{\"S\":\"Good Movie! I like it.\"},\"reviewDate\":{\"S\":\"20240228\"},\"rating\":{\"N\":\"5\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"2345\"},\"reviewerName\":{\"S\":\"HaoxuanGu\"},\"content\":{\"S\":\"Good Movie! I like it.\"},\"reviewDate\":{\"S\":\"20240229\"},\"rating\":{\"N\":\"5\"}}}}]}},\"physicalResourceId\":{\"id\":\"moviesddbInitData\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "moviesddbInitDataCustomResourcePolicyA35F01DC"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/moviesddbInitData/Resource/Default"
   }
  },
  "moviesddbInitDataCustomResourcePolicyA35F01DC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:BatchWriteItem",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieCastTableE4F7E4C8",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "MovieReviewTable19486002",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "moviesddbInitDataCustomResourcePolicyA35F01DC",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/moviesddbInitData/CustomResourcePolicy/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "099a3112386fa620b3069790dcf92c8e64bb5341760a8b0a76bfa843f8ad41df.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.099a3112386fa620b3069790dcf92c8e64bb5341760a8b0a76bfa843f8ad41df",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RestAPI1CC12F26": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "App RestApi",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "RestAPI"
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Resource"
   }
  },
  "RestAPIDeploymentD35A53804b500c3d4bc657442bc1b282bcf48cef": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "App RestApi",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "DependsOn": [
    "RequestAuthorizer7473A0B3",
    "RestAPImoviesmovieIdGET6B517F00",
    "RestAPImoviesmovieIdOPTIONSC1FB0512",
    "RestAPImoviesmovieId3DE0D522",
    "RestAPImoviesmovieIdreviewsreviewerNameGET6B912FEF",
    "RestAPImoviesmovieIdreviewsreviewerNameOPTIONS2F0C0004",
    "RestAPImoviesmovieIdreviewsreviewerNamePUT2C1BCEBE",
    "RestAPImoviesmovieIdreviewsreviewerName061ABEC4",
    "RestAPImoviesmovieIdreviewsGETE34AC9B8",
    "RestAPImoviesmovieIdreviewsOPTIONSCFDDE4D4",
    "RestAPImoviesmovieIdreviews5115F3C9",
    "RestAPImoviescastGET553E1102",
    "RestAPImoviescastOPTIONS396E3DE5",
    "RestAPImoviescastA509B28E",
    "RestAPImoviesDeleteEB0F0328",
    "RestAPImoviesGET8F06310F",
    "RestAPImoviesOPTIONS1E02A856",
    "RestAPImoviesPOSTC027C064",
    "RestAPImoviesA51CB040",
    "RestAPImoviesreviewsreviewerNameGETA4FCAA45",
    "RestAPImoviesreviewsreviewerNameOPTIONS1AF2568C",
    "RestAPImoviesreviewsreviewerNameD70FBF61",
    "RestAPImoviesreviewsOPTIONSDBDC2016",
    "RestAPImoviesreviewsPOST7433BE10",
    "RestAPImoviesreviews6A583905",
    "RestAPIOPTIONS3271A002"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Deployment/Resource"
   }
  },
  "RestAPIDeploymentStagedev1DE74094": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "RestAPIDeploymentD35A53804b500c3d4bc657442bc1b282bcf48cef"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    },
    "StageName": "dev"
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/DeploymentStage.dev/Resource"
   }
  },
  "RestAPIOPTIONS3271A002": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "RestAPI1CC12F26",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/OPTIONS/Resource"
   }
  },
  "RestAPImoviesA51CB040": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RestAPI1CC12F26",
      "RootResourceId"
     ]
    },
    "PathPart": "movies",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/Resource"
   }
  },
  "RestAPImoviesOPTIONS1E02A856": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/OPTIONS/Resource"
   }
  },
  "RestAPImoviesGETApiPermissionRestAPIStackRestAPIBD91D303GETmovies4E6039D0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllMoviesFnD14CC45A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies"
   }
  },
  "RestAPImoviesGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmovies1D7D11A0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllMoviesFnD14CC45A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies"
   }
  },
  "RestAPImoviesGET8F06310F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetAllMoviesFnD14CC45A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/GET/Resource"
   }
  },
  "RestAPImoviesPOSTApiPermissionRestAPIStackRestAPIBD91D303POSTmovies8CD10A5C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddReviewFnE8F4E4BE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/POST/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/POST/ApiPermission.RestAPIStackRestAPIBD91D303.POST..movies"
   }
  },
  "RestAPImoviesPOSTApiPermissionTestRestAPIStackRestAPIBD91D303POSTmovies2C903EBE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddReviewFnE8F4E4BE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/POST/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/POST/ApiPermission.Test.RestAPIStackRestAPIBD91D303.POST..movies"
   }
  },
  "RestAPImoviesPOSTC027C064": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "RequestAuthorizer7473A0B3"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddReviewFnE8F4E4BE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/POST/Resource"
   }
  },
  "RestAPImoviesDeleteApiPermissionRestAPIStackRestAPIBD91D303DELETEmoviesF0C453C2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteMovieFnCF59BB54",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/DELETE/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/Delete/ApiPermission.RestAPIStackRestAPIBD91D303.DELETE..movies"
   }
  },
  "RestAPImoviesDeleteApiPermissionTestRestAPIStackRestAPIBD91D303DELETEmovies33AD2BA3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteMovieFnCF59BB54",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/DELETE/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/Delete/ApiPermission.Test.RestAPIStackRestAPIBD91D303.DELETE..movies"
   }
  },
  "RestAPImoviesDeleteEB0F0328": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "RequestAuthorizer7473A0B3"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteMovieFnCF59BB54",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/Delete/Resource"
   }
  },
  "RestAPImoviesmovieId3DE0D522": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "PathPart": "{movieId}",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/Resource"
   }
  },
  "RestAPImoviesmovieIdOPTIONSC1FB0512": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesmovieId3DE0D522"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/OPTIONS/Resource"
   }
  },
  "RestAPImoviesmovieIdGETApiPermissionRestAPIStackRestAPIBD91D303GETmoviesmovieId92836E56": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetMovieByIdFn429FC61F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}"
   }
  },
  "RestAPImoviesmovieIdGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmoviesmovieId290552F1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetMovieByIdFn429FC61F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}"
   }
  },
  "RestAPImoviesmovieIdGET6B517F00": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "RequestParameters": {
      "integration.request.querystring.cast": "'true'"
     },
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetMovieByIdFn429FC61F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesmovieId3DE0D522"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/GET/Resource"
   }
  },
  "RestAPImoviesmovieIdreviews5115F3C9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesmovieId3DE0D522"
    },
    "PathPart": "reviews",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/Resource"
   }
  },
  "RestAPImoviesmovieIdreviewsOPTIONSCFDDE4D4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesmovieIdreviews5115F3C9"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/OPTIONS/Resource"
   }
  },
  "RestAPImoviesmovieIdreviewsGETApiPermissionRestAPIStackRestAPIBD91D303GETmoviesmovieIdreviews544E2FDE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetReviewByIdFn1432CD24",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies/*/reviews"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}.reviews"
   }
  },
  "RestAPImoviesmovieIdreviewsGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmoviesmovieIdreviews7DC87E12": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetReviewByIdFn1432CD24",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies/*/reviews"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}.reviews"
   }
  },
  "RestAPImoviesmovieIdreviewsGETE34AC9B8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetReviewByIdFn1432CD24",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesmovieIdreviews5115F3C9"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/GET/Resource"
   }
  },
  "RestAPImoviesmovieIdreviewsreviewerName061ABEC4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesmovieIdreviews5115F3C9"
    },
    "PathPart": "{reviewerName}",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/{reviewerName}/Resource"
   }
  },
  "RestAPImoviesmovieIdreviewsreviewerNameOPTIONS2F0C0004": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesmovieIdreviewsreviewerName061ABEC4"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/{reviewerName}/OPTIONS/Resource"
   }
  },
  "RestAPImoviesmovieIdreviewsreviewerNameGETApiPermissionRestAPIStackRestAPIBD91D303GETmoviesmovieIdreviewsreviewerName479E9567": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetReviewByReviewerNameOrYearFnF94A1CED",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies/*/reviews/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/{reviewerName}/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}.reviews.{reviewerName}"
   }
  },
  "RestAPImoviesmovieIdreviewsreviewerNameGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmoviesmovieIdreviewsreviewerName47BFC157": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetReviewByReviewerNameOrYearFnF94A1CED",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies/*/reviews/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/{reviewerName}/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}.reviews.{reviewerName}"
   }
  },
  "RestAPImoviesmovieIdreviewsreviewerNameGET6B912FEF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetReviewByReviewerNameOrYearFnF94A1CED",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesmovieIdreviewsreviewerName061ABEC4"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/{reviewerName}/GET/Resource"
   }
  },
  "RestAPImoviesmovieIdreviewsreviewerNamePUTApiPermissionRestAPIStackRestAPIBD91D303PUTmoviesmovieIdreviewsreviewerName9CDECC2C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ModifyReviewByReviewerNameFn98576E52",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/PUT/movies/*/reviews/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/{reviewerName}/PUT/ApiPermission.RestAPIStackRestAPIBD91D303.PUT..movies.{movieId}.reviews.{reviewerName}"
   }
  },
  "RestAPImoviesmovieIdreviewsreviewerNamePUTApiPermissionTestRestAPIStackRestAPIBD91D303PUTmoviesmovieIdreviewsreviewerNameCCA1EDE9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ModifyReviewByReviewerNameFn98576E52",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/PUT/movies/*/reviews/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/{reviewerName}/PUT/ApiPermission.Test.RestAPIStackRestAPIBD91D303.PUT..movies.{movieId}.reviews.{reviewerName}"
   }
  },
  "RestAPImoviesmovieIdreviewsreviewerNamePUT2C1BCEBE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "RequestAuthorizer7473A0B3"
    },
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ModifyReviewByReviewerNameFn98576E52",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesmovieIdreviewsreviewerName061ABEC4"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/{reviewerName}/PUT/Resource"
   }
  },
  "RestAPImoviescastA509B28E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "PathPart": "cast",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/cast/Resource"
   }
  },
  "RestAPImoviescastOPTIONS396E3DE5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviescastA509B28E"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/cast/OPTIONS/Resource"
   }
  },
  "RestAPImoviescastGETApiPermissionRestAPIStackRestAPIBD91D303GETmoviescast847390FD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCastMemberFn1BEFFC9C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies/cast"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/cast/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies.cast"
   }
  },
  "RestAPImoviescastGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmoviescast7A2985A7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCastMemberFn1BEFFC9C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies/cast"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/cast/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies.cast"
   }
  },
  "RestAPImoviescastGET553E1102": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetCastMemberFn1BEFFC9C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviescastA509B28E"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/cast/GET/Resource"
   }
  },
  "RestAPImoviesreviews6A583905": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "PathPart": "reviews",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/Resource"
   }
  },
  "RestAPImoviesreviewsOPTIONSDBDC2016": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesreviews6A583905"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/OPTIONS/Resource"
   }
  },
  "RestAPImoviesreviewsPOSTApiPermissionRestAPIStackRestAPIBD91D303POSTmoviesreviewsE1659D41": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddReviewFnE8F4E4BE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/POST/movies/reviews"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/POST/ApiPermission.RestAPIStackRestAPIBD91D303.POST..movies.reviews"
   }
  },
  "RestAPImoviesreviewsPOSTApiPermissionTestRestAPIStackRestAPIBD91D303POSTmoviesreviewsEFDF6EB7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddReviewFnE8F4E4BE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/POST/movies/reviews"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/POST/ApiPermission.Test.RestAPIStackRestAPIBD91D303.POST..movies.reviews"
   }
  },
  "RestAPImoviesreviewsPOST7433BE10": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "RequestAuthorizer7473A0B3"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddReviewFnE8F4E4BE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesreviews6A583905"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/POST/Resource"
   }
  },
  "RestAPImoviesreviewsreviewerNameD70FBF61": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesreviews6A583905"
    },
    "PathPart": "{reviewerName}",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/Resource"
   }
  },
  "RestAPImoviesreviewsreviewerNameOPTIONS1AF2568C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesreviewsreviewerNameD70FBF61"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/OPTIONS/Resource"
   }
  },
  "RestAPImoviesreviewsreviewerNameGETApiPermissionRestAPIStackRestAPIBD91D303GETmoviesreviewsreviewerName9A87A245": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllReviewsByReviewerNameFn86115EA0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies/reviews/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies.reviews.{reviewerName}"
   }
  },
  "RestAPImoviesreviewsreviewerNameGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmoviesreviewsreviewerNameC6F6DB5E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllReviewsByReviewerNameFn86115EA0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies/reviews/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies.reviews.{reviewerName}"
   }
  },
  "RestAPImoviesreviewsreviewerNameGETA4FCAA45": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetAllReviewsByReviewerNameFn86115EA0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesreviewsreviewerNameD70FBF61"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12QwW7CMAyGn4V7yMa4sCN02m0bKtu5SlNTAmnc1c5QV/XdpzQtRTv9n/3bTuwnudnIx4W60lIXl6U1uewOrPRFqCtlncbSGUbZfRE0e0QrkqO78QSJNeD43oqZXqjalIrhqlrZpUC8rU0om/AFaottNTbfRQdWJYRchBQIfaNhpwjEG/AJi2CONLnj5MgpfPvwiucTNuYXmuDOUS+sqvJCyS45uj00lSEy6ELRq3eaAx+MKy0wzpkJpu7MYQFnku+D3MqMqmSXoo0/CrpHa3Qbwki9oHWmiIBJboMIWsud1xfgYceidarCIpfdp8rjnAH6PuCH59rzvPcwIVzKuFJoT4xV1owmye2VkiE33+lfeHe25OgSdIWJW4b15JkeflYbuXqWq8WZjFk23rGpQKZR/wAbquR9QwIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "AuthServiceApiEndpointBBC1D636": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AuthServiceApi6F145F59"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AuthServiceApiDeploymentStageprodEA127565"
      },
      "/"
     ]
    ]
   }
  },
  "RestAPIEndpointB14C3C54": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "RestAPI1CC12F26"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "RestAPIDeploymentStagedev1DE74094"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}